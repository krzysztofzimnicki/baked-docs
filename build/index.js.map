{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx", "../app/root.tsx", "mdx:routes/components/route.mdx", "../app/components/CodePreview.tsx", "../app/utils/ReactToString.ts", "../app/utils/ReactToHTML.tsx", "../_components/react-button.tsx", "../app/routes/component.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { Links, Meta, Outlet, Scripts } from \"@remix-run/react\";\nimport { LinksFunction } from \"@remix-run/node\";\nimport styles from \"./styles/tailwind.css\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: styles }];\n\n\nexport default function App() {\n  return (\n    <html>\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <Scripts />\n      </body>\n    </html>);\n\n}", "\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {CodePreview} from '../../components/CodePreview';\nimport ReactButton from '../../../_components/react-button';\nfunction _createMdxContent(props) {\n  return <><ReactButton />{\"\\n\"}<CodePreview component={ReactButton} /></>;\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n\n\nexport const filename = \"route.mdx\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\nexport const handle = typeof attributes !== \"undefined\" && attributes.handle;\n    ", "import { useState } from \"react\"\nimport { ReactToString } from '../utils/ReactToString'\nimport { ReactToHTML } from \"../utils/ReactToHTML\";\n\ninterface ICodePreview {\n  component: Element;\n}\n\nexport const CodePreview = ({ component }: ICodePreview) => {\n\n  // isHTMLPreview = true => display HTMl of React Component\n  // isHTMLPreview = true => display React Component with Props\n  const [isHTMLPreview, setIsHTMLPreview] = useState(false);\n\n  const ReactPreview = ReactToString(component);\n  const HTMLPreview = ReactToHTML(component);\n\n  return (\n\n    <div>\n      <button onClick={() => setIsHTMLPreview(!isHTMLPreview)}>Toogle Preview</button>\n      <div>\n        {isHTMLPreview ? (\n          <div><code>{HTMLPreview}</code></div>\n        ) : (\n          <div><code>{ReactPreview}</code></div>)}\n      </div>\n    </div>\n\n  )\n\n}\n", "export const ReactToString = (ReactComponent: any) => {\n\n  const propsToString = (props: any) => {\n    return Object.entries(props)\n      .map(([key, value]) => {\n        // Check if the value is a string and quote it\n        const valueStr = typeof value === 'string' ? `\"${value}\"` : `{${JSON.stringify(value)}}`;\n        return `${key}=${valueStr}`;\n      })\n      .join(' ');\n  };\n\n  const componentName = ReactComponent.displayName || ReactComponent.name || 'Component';\n  const componentPropsString = propsToString(ReactComponent.defaultProps || {});\n\n  const componentReact = `<${componentName} ${componentPropsString} />`;\n\n  return componentReact\n\n}\n\n\n", "import { Component, ReactElement, useState } from \"react\";\nimport { renderToString } from 'react-dom/server';\nimport { SimplePrettify } from \"./SimplePrettify\";\n\nexport const ReactToHTML = (ReactComponent: any) => {\n\n  const componentString = renderToString(ReactComponent());\n\n  return componentString\n}\n", "import React from 'react'\n\nReactButton.defaultProps = {\n  props: 'Test Prop'\n}\n\nexport default function ReactButton(props: any) {\n\n  return (\n    <button className='bg-red-500 rounded-xl p-4' onClick={props}>\n      <p>Click me!</p>\n    </button>\n  )\n\n}\n", "export default function Component() {\n  return (\n    <main>\n        <p>Component</p>\n    </main>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-XFCPLNET.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-4TB67T4M.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-N2GCAXRV.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-TFOELRCJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/component':{'id':'routes/component','parentId':'root','path':'component','index':undefined,'caseSensitive':undefined,'module':'/build/routes/component-MXG77LB2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/components':{'id':'routes/components','parentId':'root','path':'components','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components-ICM62OG2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'6d1e08ce','hmr':{'runtime':'/build/_shared/chunk-N2GCAXRV.js','timestamp':1704201277553},'url':'/build/manifest-6D1E08CE.js'};", "\nimport * as entryServer from \"/Users/krzysztofzimnicki/Documents/artificial-ui-demo/baked-docs/node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/components/route.mdx\";\nimport * as route2 from \"./routes/component.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/components\": {\n      id: \"routes/components\",\n      parentId: \"root\",\n      path: \"components\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/component\": {\n      id: \"routes/component\",\n      parentId: \"root\",\n      path: \"component\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV"]
}
